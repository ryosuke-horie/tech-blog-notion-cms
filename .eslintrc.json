{
  "extends": [
    "eslint:recommended", // js用
    "plugin:@typescript-eslint/recommended-type-checked", // ts用
    "next/core-web-vitals",
    "prettier",
    "plugin:jsdoc/recommended-typescript-error"
  ],
  "plugins": ["import", "unused-imports", "jsdoc"], // import の順番を制御 // JSDocのルールを追加
  "parserOptions": {
    "project": ["./tsconfig.json"] // 追加
  },
  "rules": {
    "@typescript-eslint/no-unused-vars": "off", // unused-imports/no-unused-imports で代用
    "unused-imports/no-unused-imports": "error",
    // Todo:以下5件のルールを復活させる
    "@typescript-eslint/no-unsafe-member-access": "off",
    "@typescript-eslint/no-unsafe-call": "off",
    "@typescript-eslint/no-unsafe-assignment": "off",
    "@typescript-eslint/no-unsafe-return": "off",
    "react/jsx-key": ["off", { "checkFragmentShorthand": false }],
    "import/order": [
      "error",
      {
        "groups": [
          "builtin",
          "external",
          "internal",
          "parent",
          "sibling",
          "object",
          "type",
          "index"
        ],
        "newlines-between": "always", // import groups の間を1行あける
        "pathGroupsExcludedImportTypes": ["builtin"],
        "alphabetize": { "order": "asc", "caseInsensitive": true }, // 大文字小文字関係なくアルファベット順
        "pathGroups": [
          {
            "pattern": "@/components/**",
            "group": "internal",
            "position": "before"
          }
        ]
      }
    ],
    // Enable
    "jsdoc/check-param-names": [
      "error",
      {
        "checkDestructured": false
      }
    ],
    "jsdoc/check-tag-names": [
      "error",
      {
        "definedTags": ["remarks", "typeParam"]
      }
    ],
    "jsdoc/require-description": [
      "error",
      {
        "contexts": [
          "ArrowFunctionExpression",
          "ClassDeclaration",
          "ClassExpression",
          "FunctionDeclaration",
          "FunctionExpression",
          "MethodDefinition",
          "PropertyDefinition",
          "VariableDeclaration",
          "TSInterfaceDeclaration",
          "TSTypeAliasDeclaration",
          "TSPropertySignature",
          "TSMethodSignature"
        ]
      }
    ],
    "jsdoc/require-hyphen-before-param-description": ["error", "always"],
    "jsdoc/require-jsdoc": [
      "error",
      {
        "publicOnly": true,
        "require": {
          "ArrowFunctionExpression": true,
          "ClassDeclaration": true,
          "ClassExpression": true,
          "FunctionDeclaration": true,
          "FunctionExpression": true,
          "MethodDefinition": true
        },
        "contexts": [
          "PropertyDefinition",
          "VariableDeclaration",
          "TSInterfaceDeclaration",
          "TSTypeAliasDeclaration",
          "TSPropertySignature",
          "TSMethodSignature"
        ],
        "checkConstructors": false
      }
    ],
    "jsdoc/require-param": [
      "error",
      {
        "checkDestructuredRoots": false
      }
    ],
    "jsdoc/tag-lines": [
      "error",
      "always",
      {
        "startLines": 1,
        "applyToEndTag": false
      }
    ],
    "jsdoc/sort-tags": [
      "error",
      {
        "reportIntraTagGroupSpacing": false
      }
    ],
    // Disable
    "jsdoc/require-returns": ["off"]
  }
}
